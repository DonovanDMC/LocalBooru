# frozen_string_literal: true

class ReorganizeDatabase < ActiveRecord::Migration[7.1]
  def up
    remove_column(:tag_aliases, :forum_post_id)
    remove_column(:tag_aliases, :forum_topic_id)
    remove_column(:tag_implications, :forum_post_id)
    remove_column(:tag_implications, :forum_topic_id)
    remove_column(:posts, :is_comment_disabled)
    remove_column(:posts, :is_comment_locked)
    remove_column(:posts, :last_noted_at)
    remove_column(:posts, :last_comment_bumped_at)
    remove_column(:posts, :is_note_locked)
    remove_column(:posts, :is_rating_locked)
    remove_column(:posts, :is_status_locked)
    remove_column(:posts, :is_flagged)
    remove_column(:posts, :comment_count)
    remove_column(:posts, :last_commented_at)
    remove_column(:posts, :locked_tags)
    remove_column(:posts, :is_pending)
    remove_column(:posts, :up_score)
    remove_column(:posts, :down_score)
    remove_column(:posts, :score)
    remove_column(:posts, :fav_string)
    remove_column(:posts, :fav_count)
    remove_column(:posts, :vote_string)
    remove_column(:post_versions, :locked_tags)
    remove_column(:post_versions, :added_locked_tags)
    remove_column(:post_versions, :removed_locked_tags)
    remove_column(:tags, :follower_count)
    remove_column(:tags, :is_locked)
    remove_column(:tag_versions, :is_locked)
    remove_column(:post_replacements, :penalize_uploader_on_approve)
    remove_column(:post_replacements, :rejection_reason)
    remove_column(:destroyed_posts, :notified)

    remove_column(:destroyed_posts, :destroyer_id)
    remove_column(:destroyed_posts, :uploader_id)
    remove_column(:exception_logs, :user_id)
    remove_column(:favorites, :user_id)
    remove_column(:mod_actions, :creator_id)
    remove_column(:post_versions, :updater_id)
    remove_column(:pools, :creator_id)
    remove_column(:post_events, :creator_id)
    remove_column(:post_replacements, :rejector_id)
    remove_column(:post_replacements, :approver_id)
    remove_column(:post_replacements, :creator_id)
    remove_column(:post_replacements, :uploader_id_on_approve)
    remove_column(:pool_versions, :updater_id)
    remove_column(:posts, :approver_id)
    remove_column(:posts, :uploader_id)
    remove_column(:tag_aliases, :creator_id)
    remove_column(:tag_aliases, :approver_id)
    remove_column(:tag_implications, :creator_id)
    remove_column(:tag_implications, :approver_id)
    remove_column(:tag_versions, :updater_id)
    remove_column(:uploads, :uploader_id)
    add_column(:posts, :deletion_reason, :string)
    add_column(:mod_actions, :creator_ip_addr, :inet, null: false)
    add_column(:pools, :creator_ip_addr, :inet, null: false)
    add_column(:post_events, :creator_ip_addr, :inet, null: false)
    add_column(:post_replacements, :approver_ip_addr, :inet)
    add_column(:post_replacements, :rejector_ip_addr, :inet)
    add_column(:post_replacements, :uploader_ip_addr_on_approve, :inet)
    add_column(:tag_versions, :updater_ip_addr, :inet, null: false)
    add_column(:favorites, :creator_ip_addr, :inet, null: false)
    add_column(:tag_aliases, :approver_ip_addr, :inet)
    add_column(:tag_aliases, :rejector_ip_addr, :inet)
    add_column(:tag_implications, :approver_ip_addr, :inet)
    add_column(:tag_implications, :rejector_ip_addr, :inet)
    add_column(:posts, :tag_count_creator, :integer, default: 0, null: false)
    rename_column(:pools, :artist_names, :creator_names)

    create_table(:creators, if_not_exists: true) do |t|
      t.string(:name, null: false)
      t.inet(:creator_ip_addr, null: false)
      t.text(:other_names, default: [], null: false, array: true)
      t.text(:notes)
      t.timestamps
    end

    create_table(:creator_urls, if_not_exists: true) do |t|
      t.references(:creator, null: false, foreign_key: true)
      t.text(:url, null: false)
      t.text(:normalized_url, null: false)
      t.boolean(:is_active, default: true, null: false)
      t.index(%i[url creator_id], unique: true)
      t.timestamps
    end

    create_table(:creator_versions, if_not_exists: true) do |t|
      t.references(:creator, null: false, foreign_key: true)
      t.string(:name, null: false)
      t.inet(:updater_ip_addr, null: false)
      t.text(:urls, default: [], null: false, array: true)
      t.text(:notes, default: "", null: false)
      t.boolean(:notes_changed, default: false, null: false)
      t.text(:other_names, default: [], null: false, array: true)
      t.timestamps
    end

    drop_table(:api_keys)
    drop_table(:avoid_posting_versions)
    drop_table(:avoid_postings)
    drop_table(:artist_urls)
    drop_table(:artist_versions)
    drop_table(:artists)
    drop_table(:bans)
    drop_table(:bulk_update_requests)
    drop_table(:comment_votes)
    drop_table(:comments)
    drop_table(:dmail_filters)
    drop_table(:dmails)
    drop_table(:dtext_links)
    drop_table(:edit_histories)
    drop_table(:email_blacklists)
    drop_table(:forum_post_votes)
    drop_table(:forum_posts)
    drop_table(:forum_topic_statuses)
    drop_table(:forum_topics)
    drop_table(:forum_category_visits)
    drop_table(:forum_categories)
    drop_table(:help_pages)
    drop_table(:ip_bans)
    drop_table(:mascots)
    drop_table(:news_updates)
    drop_table(:note_versions)
    drop_table(:notifications)
    drop_table(:notes)
    drop_table(:post_appeals)
    drop_table(:post_approvals)
    drop_table(:post_deletion_reasons)
    drop_table(:post_disapprovals)
    drop_table(:post_flags)
    drop_table(:post_replacement_rejection_reasons)
    drop_table(:post_set_maintainers)
    drop_table(:post_sets)
    drop_table(:post_votes)
    drop_table(:quick_rules)
    drop_table(:rules)
    drop_table(:rule_categories)
    drop_table(:staff_audit_logs)
    drop_table(:staff_notes)
    drop_table(:tag_followers)
    drop_table(:tag_rel_undos)
    drop_table(:takedowns)
    drop_table(:tickets)
    drop_table(:upload_whitelists)
    drop_table(:user_approvals)
    drop_table(:user_blocks)
    drop_table(:user_events)
    drop_table(:user_feedbacks)
    drop_table(:user_name_change_requests)
    drop_table(:user_password_reset_nonces)
    drop_table(:user_sessions)
    drop_table(:user_text_versions)
    drop_table(:wiki_page_versions)
    drop_table(:wiki_pages)
    drop_table(:users)
  end

  def drop_table(*, **)
    super(*, **, if_exists: true)
  end

  def remove_column(*, **)
    super(*, **, if_exists: true)
  end

  def add_column(*, **)
    super(*, **, if_not_exists: true)
  end

  def rename_column(table, column, *, **)
    return unless ActiveRecord::Base.connection.columns(table).map(&:name).include?(column.to_sym)
    super(table, column, *, **)
  end

  def down
    raise("Not Reversible")
  end
end

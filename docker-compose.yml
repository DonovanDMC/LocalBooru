x-environment: &common-env
  FEMBOYFANS_HOSTNAME: http://localhost:${EXPOSED_SERVER_PORT:-5000}
  FEMBOYFANS_REDIS_URL: redis://redis
  FEMBOYFANS_OPENSEARCH_HOST: opensearch
  FEMBOYFANS_IQDB_SERVER: http://iqdb:5588
  SECRET_TOKEN: 1c58518a891eff4520cadc59afa9e378a9325f1247544ff258096e497f095f45
  SESSION_SECRET_KEY: 44b4f44e9f253c406cbe727d403d500c1cecff943e4d2aea8f5447f28846fffe
  # Hide annoying output from libvips on corrupt files
  VIPS_WARNING: "0"

x-depends-on: &common-depends-on
  opensearch:
    condition: service_healthy
  postgres:
    condition: service_healthy
  redis:
    condition: service_healthy

services:
  localbooru:
    build:
      context: .
      args:
        HOST_UID: ${HOST_UID:-1000}
        HOST_GID: ${HOST_GID:-1000}
    user: ${DOCKER_USER:-root}
    image: localbooru
    healthcheck:
      # this healthcheck is only for the rails app, sidekiq needs to be separated to be healthchecked
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:9000/up || exit 1
      interval: 20s
      timeout: 8s
      retries: 10
    volumes:
      - .:/app
      - node_modules:/app/node_modules
      - post_data:/app/public/data
      - ./docker/cron_tasks/daily:/etc/periodic/daily
      - ./docker/cron_tasks/hourly:/etc/periodic/hourly
    environment:
      <<: *common-env
      RAILS_ENV: development
      DB_USER: localbooru
      DB_NAME: localbooru
    depends_on:
      <<: *common-depends-on
      autocompleted:
        condition: service_healthy
      iqdb:
        condition: service_healthy
      redis:
        condition: service_healthy
    tty: true
    init: true

  # For this service to work properly, it must be accessible from /tags/autocomplete.json on the same url as the primary app
  autocompleted:
    image: ghcr.io/femboyfans/autocompleted:413faed9e0371d14e350c8131f1300f1687f951a
    command: /app/autocompleted
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://$$SERVER_ADDR/up || exit 1
      interval: 30s
      timeout: 2s
      retries: 5
    environment:
      SERVER_ADDR: autocompleted:8118
      PG__USER: localbooru
      PG__HOST: postgres
      PG__PORT: 5432
      PG__DBNAME: localbooru
      PG__POOL__MAX_SIZE: 1

  nginx:
    image: nginx:stable-alpine
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:$$NGINX_PORT/online || exit 1
      interval: 15s
      timeout: 2s
      retries: 5
    volumes:
      - ./public:/app/public
      - post_data:/app/public/data
      - ./docker/default.conf.template:/etc/nginx/templates/default.conf.template
    environment:
      <<: *common-env
      NGINX_PORT: ${EXPOSED_NGINX_PORT:-5000}
    depends_on:
      autocompleted:
        condition: service_healthy
      localbooru:
        condition: service_healthy
    ports:
      - "${EXPOSED_SERVER_PORT:-5000}:${EXPOSED_SERVER_PORT:-5000}"

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=localbooru
      - POSTGRES_DB=localbooru
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: pg_isready -U localbooru -d postgres
      interval: 20s
      timeout: 2s
      retries: 10
    ports:
      - "${EXPOSED_POSTGRES_PORT:-45432}:5432"

  redis:
    image: redis:7.0.10-alpine
    command: redis-server --save 10 1 --loglevel warning
    healthcheck:
      test: redis-cli ping
      interval: 15s
      timeout: 2s
      retries: 5
    volumes:
      - redis_data:/data
    ports:
      - "${EXPOSED_REDIS_PORT:-46379}:6379"

  opensearch:
    image: opensearchproject/opensearch:2.13.0
    environment:
      - discovery.type=single-node
      - logger.level=WARN
      - DISABLE_SECURITY_PLUGIN=true
      - DISABLE_INSTALL_DEMO_CONFIG=true
      - OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g
    volumes:
      - opensearch_data:/usr/share/opensearch/data
    init: true
    healthcheck:
      test: curl "opensearch:9200/_cluster/health?wait_for_status=yellow&timeout=2s"
      interval: 30s
      timeout: 2s
      retries: 12
    ports:
      - "${EXPOSED_OPENSEARCH_PORT:-59200}:9200"

  iqdb:
    image: ghcr.io/e621ng/iqdb:ad5e363879d4e4b80a0821253ae610b7859c5d32
    command: iqdb http 0.0.0.0 5588 /iqdb/iqdb.db
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://127.0.0.1:5588/status || exit 1
      interval: 30s
      timeout: 2s
      retries: 5
    volumes:
      - iqdb_data:/iqdb

  # Useful for development

  rubocop:
    image: localbooru
    volumes:
      - .:/app
      - rubocop_cache:/rubocop_cache
    entrypoint: bundle exec rubocop --cache-root /rubocop_cache
    profiles:
      - rubocop

  linter:
    image: localbooru
    volumes:
      - .:/app
      - node_modules:/app/node_modules
    entrypoint: yarn run lint
    profiles:
      - linter

volumes:
  post_data:
  iqdb_data:
  opensearch_data:
  db_data:
  redis_data:
  node_modules:
  rubocop_cache:

networks:
  default:
    driver: bridge
    ipam:
      driver: default
    driver_opts:
      com.docker.network.bridge.name: br-localbooru

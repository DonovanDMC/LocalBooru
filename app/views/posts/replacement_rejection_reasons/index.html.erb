<h1>Post Replacement Rejection Reasons</h1>

<table class="striped" id="post-replacement-rejection-reasons-table">
  <thead>
  <tr>
    <th>Creator</th>
    <th>Date</th>
    <th>Reason</th>
    <% if policy(PostReplacementRejectionReason).all?(:update?, :destroy?, :reorder?) %>
      <th></th>
    <% end %>
  </tr>
  </thead>

  <tbody>
  <% last_order = 0 %>
  <% @reasons.each do |reason| %>
    <%# the latter should never happen, but if it did, this loop would tear down the site %>
    <% if (last_order + 1) != reason.order && last_order != reason.order %>
      <% while (last_order + 1) != reason.order %>
        <%= render partial: "spacing" %>
        <% last_order += 1 %>
      <% end %>
    <% end %>
    <% last_order = reason.order %>
    <tr id="post-replacement-rejection-reason-<%= reason.id %>" data-id="<%= reason.id %>">
      <td><%= link_to_user reason.creator %></td>
      <td><%= compact_time reason.updated_at %></td>
      <td><%= reason.reason %></td>
      <% if policy(reason).all?(:update?, :destroy?, :reorder?) %>
        <td>
          <%= link_to "Edit", edit_post_replacement_rejection_reason_path(reason) %> |
          <%= link_to "Delete", post_replacement_rejection_reason_path(reason), method: :delete, data: { confirm: "Are you sure you want to delete this reason?" } %>
          <span class="add-spacing-link" style="display: none;">
            | Add Spacing: <%= link_to "Above", "#", class: "link-add-spacing-above" %>/<%= link_to "Below", "#", class: "link-add-spacing-below"  %>
          </span>
        </td>
      <% end %>
    </tr>
  <% end %>
  </tbody>
</table>


<%= render partial: "secondary_links" %>

<% content_for(:page_title) do %>
  Post Replacement Rejection Reasons
<% end %>

<%= javascript_tag nonce: true do -%>
  const spacing = $(`<%= render partial: "spacing" %>`);
  function reinitRemoveListener() {
    $(".link-remove-spacing").off("click.femboyfans.spacing");
    $(".link-remove-spacing").on("click.femboyfans.spacing", function(event) {
      event.preventDefault();
      $(this).closest("tr").remove();
    });
  }
  reinitRemoveListener();

  function reorderData() {
    return JSON.stringify(Array.from($("#post-replacement-rejection-reasons-table tr")).slice(1).map((element, index) => ({ id: element.dataset.id ? Number(element.dataset.id) : null, order: index + 1 })));
  }

  $(".link-add-spacing-below").on("click.femboyfans.spacing", function(event) {
    event.preventDefault();
    spacing.insertAfter($(this).closest("tr"));
    reinitRemoveListener();
  });

  $(".link-add-spacing-above").on("click.femboyfans.spacing", function(event) {
    event.preventDefault();
    spacing.insertBefore($(this).closest("tr"));
    reinitRemoveListener();
  });

  $(".edit-order-link").on("click.femboyfans.sorting", function(event) {
    event.preventDefault();
    $(".save-order-link").show();
    $(".edit-order-link").hide();
    $(".add-spacing-link").show();
    $(".link-remove-spacing").show();
    $("#post-replacement-rejection-reasons-table tbody").sortable();
    Danbooru.notice("Drag and drop to reorder.");
  });

  $(".save-order-link").on("click.femboyfans.sorting", function(event) {
    event.preventDefault();
    $(".save-order-link").hide();
    $(".add-spacing-link").hide();
    $(".link-remove-spacing").hide();
    $("#post-replacement-rejection-reasons-table tbody").sortable("disable");
    $.ajax({
      url: "/posts/replacement_rejection_reasons/reorder.json",
      type: "POST",
      headers: {
        "Content-Type": "application/json"
      },
      data: reorderData(),
      success() {
        Danbooru.notice("Order updated.");
        $(".edit-order-link").show();
      },
      error() {
        Danbooru.error("Failed to update order.");
        $(".save-order-link").show();
        $("#post-replacement-rejection-reasons-table tbody").sortable();
      }
    });
  });
<% end %>
